
1. How to find the mean of every NumPy array in the given list?

Input: list = [ np.array([3, 2, 8, 9]), np.array([4, 12, 34, 25, 78]), np.array([23, 12, 67]) ]

Output:
Mean of each array
[5.5,30.6,34.0]

Code:
import numpy as np
arr_list = [np.array([3, 2, 8, 9]), np.array([4, 12, 34, 25, 78]), np.array([23, 12, 67])]                        # Define the list of NumPy arrays
means = [np.mean(arr) for arr in arr_list]                                                                        # Calculate the mean of each array
print("Mean of each array:")                                                                                      # Output the mean of each array
print(means)

Output:
Mean of each array:
[5.5, 30.6, 34.0]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. Compute the median of the flattened NumPy array Input: x_odd = np.array([1, 2, 3, 4, 5, 6, 7])

Output:
 Printing the original arrat:
 [1 2 3 4 5 6]
 Median of the array tht contains odd no of elements:
 4.0

Code:
import numpy as np
x_odd = np.array([1, 2, 3, 4, 5, 6, 7])
print("Printing the original array:")                                            # Print the original array
print(x_odd)               
median_odd = np.median(x_odd)                                                    # Compute the median of the array that contains an odd number of elements
print("Median of the array that contains an odd number of elements:", median_odd)# Print the median of the array

Output:
Printing the original array:
[1 2 3 4 5 6 7]
Median of the array that contains an odd number of elements: 4.0
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
3.Compute the standard deviation of the NumPy array Input: arr = [20, 2, 7, 1, 34] Output:
 Output:arr:[20,2,7,1,34]
        std of arr:12.576167937809991
       
        More precision with float32
        std if arr:12.576168
     
        More accuracy with float64
        std of arr:12.5761677937809991
Code:
import numpy as np
arr = np.array([20, 2, 7, 1, 34])                                             # Define the array
std_default = np.std(arr)                                                     # Compute standard deviation with the default precision
print("Standard deviation of arr:", std_default)
std_float32 = np.std(arr, dtype=np.float32)
print("Standard deviation of arr (float32):", std_float32)
std_float64 = np.std(arr, dtype=np.float64)                                   # Compute standard deviation with float64 precision for even more accuracy
print("Standard deviation of arr (float64):", std_float64)

Output:
Standard deviation of arr: 12.576167937809991
Standard deviation of arr (float32): 12.576168
Standard deviation of arr (float64): 12.576167793780999
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4.Suppose you have a CSV file named 'house_prices.csv' with price information, and you want to perform the following

 operations: 

● 1.Read the data from the CSV file into a NumPy array. 

● 2.Calculate the average of house prices. 

● 3.Identify house price above the average. 

● 4.Save the list of high prices to a new CSV file. Note: Download 'house_prices.csv' file from LMS. 

Output:
Average House Price:7584.263018456919
High -Pricing Houses:
[(         ,  13799) (         2,17500) (      4,  18824)....(187227,  8436)
   (187247,   8976)  (187465,  9646)]

Code:
import numpy as np
data = np.loadtxt('house_prices.csv', delimiter=',', skiprows=1)                                        # Read the data from the CSV file
house_prices = data[:, 1]                                                                               # Assuming price is in the second column# Extract house prices
average_price = np.mean(house_prices)                                                                   # Calculate the average of house prices
print("Average House Price:", average_price)
high_prices = house_prices[house_prices > average_price]                                                # Identify house prices above the average
np.savetxt('high_prices.csv', high_prices, delimiter=',', fmt='%d')                                     # Save the list of high prices to a new CSV file
print("High-Pricing Houses:")                                                                           # Output the high pricing houses
print(high_prices)

Output:
Average House Price: 7584.263018456919
High-Pricing Houses:
[13799. 17500. 18824. ...  8436.  8976.  9646.]
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


